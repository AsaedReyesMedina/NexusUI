"use strict";
(self["webpackChunkNexusUI"] = self["webpackChunkNexusUI"] || []).push([["stories-Button-stories"],{

/***/ "./src/stories/Button.stories.ts":
/*!***************************************!*\
  !*** ./src/stories/Button.stories.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! storybook/test */ "storybook/test");
/* harmony import */ var storybook_test__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(storybook_test__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./src/stories/Button.tsx");


// More on how to set up stories at: https://storybook.js.org/docs/writing-stories#default-export
const meta = {
  title: 'Example/Button',
  component: _Button__WEBPACK_IMPORTED_MODULE_1__.Button,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout
    layout: 'centered'
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/api/argtypes
  argTypes: {
    backgroundColor: {
      control: 'color'
    }
  },
  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args
  args: {
    onClick: (0,storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args
const Primary = {
  args: {
    primary: true,
    label: 'Button'
  }
};
const Secondary = {
  args: {
    label: 'Button'
  }
};
const Large = {
  args: {
    size: 'large',
    label: 'Button'
  }
};
const Small = {
  args: {
    size: 'small',
    label: 'Button'
  }
};
;
const __namedExportsOrder = ["Primary", "Secondary", "Large", "Small"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: 'Button'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'large',\n    label: 'Button'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'small',\n    label: 'Button'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./src/stories/Button.tsx":
/*!********************************!*\
  !*** ./src/stories/Button.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module './button.css'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());


/** Primary UI component for user interaction */ const Button = ({ primary = false, size = 'medium', backgroundColor, label, ...props })=>{
    const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("button", {
        type: "button",
        className: [
            'storybook-button',
            `storybook-button--${size}`,
            mode
        ].join(' '),
        style: {
            backgroundColor
        },
        ...props,
        children: label
    }, void 0, false, {
        fileName: "/Users/asaedreyesmedina/Documents/proyects/NexusUI/src/stories/Button.tsx",
        lineNumber: 26,
        columnNumber: 5
    }, undefined);
};
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "primary": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "Is this the principal call to action on the page?",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "backgroundColor": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "What background color to use"
        },
        "size": {
            "required": false,
            "tsType": {
                "name": "union",
                "raw": "'small' | 'medium' | 'large'",
                "elements": [
                    {
                        "name": "literal",
                        "value": "'small'"
                    },
                    {
                        "name": "literal",
                        "value": "'medium'"
                    },
                    {
                        "name": "literal",
                        "value": "'large'"
                    }
                ]
            },
            "description": "How large should the button be?",
            "defaultValue": {
                "value": "'medium'",
                "computed": false
            }
        },
        "label": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": "Button contents"
        },
        "onClick": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "() => void",
                "signature": {
                    "arguments": [],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": "Optional click handler"
        }
    }
};


/***/ })

}]);
//# sourceMappingURL=stories-Button-stories.iframe.bundle.js.map